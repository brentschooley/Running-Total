<common:LayoutAwarePage
    x:Name="pageRoot"
    x:Class="RunningTotal.HubPage"
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Self}}"
   NavigationCacheMode="Enabled"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:RunningTotal"
    xmlns:data="using:RunningTotal.Data"
    xmlns:helpers="using:RunningTotal.Helpers"
    xmlns:common="using:RunningTotal.Common"
    xmlns:Charts="using:Infragistics.Controls.Charts"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>

        <!--
            Collection of grouped items displayed by this page, bound to a subset
            of the complete item list because items in groups cannot be virtualized
        -->
        <CollectionViewSource
            x:Name="groupedItemsViewSource"
            IsSourceGrouped="true"
            ItemsPath="Activities"/>

        <Style x:Key="GridViewStyle1" TargetType="GridView">
            <Setter Property="Padding" Value="0,0,0,10"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="TabNavigation" Value="Once"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Enabled"/>
            <Setter Property="ScrollViewer.IsHorizontalRailEnabled" Value="False"/>
            <Setter Property="ScrollViewer.VerticalScrollMode" Value="Disabled"/>
            <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="False"/>
            <Setter Property="ScrollViewer.ZoomMode" Value="Disabled"/>
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
            <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True"/>
            <Setter Property="IsSwipeEnabled" Value="True"/>
            <Setter Property="ItemContainerTransitions">
                <Setter.Value>
                    <TransitionCollection>
                        <AddDeleteThemeTransition/>
                        <ContentThemeTransition/>
                        <ReorderThemeTransition/>
                        <EntranceThemeTransition IsStaggeringEnabled="False"/>
                    </TransitionCollection>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <WrapGrid Orientation="Vertical"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GridView">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                            <ScrollViewer x:Name="ScrollViewer"  BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}" IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" TabNavigation="{TemplateBinding TabNavigation}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}">
                                <ItemsPresenter HeaderTemplate="{TemplateBinding HeaderTemplate}" Header="{TemplateBinding Header}" HeaderTransitions="{TemplateBinding HeaderTransitions}" Padding="{TemplateBinding Padding}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="YearTitleComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Padding" Value="8,0"/>
            <Setter Property="Foreground" Value="{StaticResource ComboBoxForegroundThemeBrush}"/>
            <Setter Property="Background" Value="{StaticResource ComboBoxBackgroundThemeBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ComboBoxBorderThemeBrush}"/>
            <Setter Property="BorderThickness" Value="{StaticResource ComboBoxBorderThemeThickness}"/>
            <Setter Property="TabNavigation" Value="Once"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto"/>
            <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="True"/>
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
            <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <CarouselPanel/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="32"/>
                            </Grid.ColumnDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPointerOverBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPointerOverBorderThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Highlight">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxSelectedPointerOverBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPressedBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPressedBorderThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPressedForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PressedBackground"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="DropDownGlyph">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxArrowPressedForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxDisabledBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxDisabledBorderThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxDisabledForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="DropDownGlyph">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxArrowDisabledForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightBackground"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Highlight"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxFocusedForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="FocusedPressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPressedForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Highlight">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPressedHighlightThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused"/>
                                    <VisualState x:Name="PointerFocused"/>
                                    <VisualState x:Name="FocusedDropDown">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PopupBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DropDownStates">
                                    <VisualState x:Name="Opened">
                                        <Storyboard>
                                            <SplitOpenThemeAnimation ClosedTargetName="ContentPresenter" ContentTranslationOffset="0" ContentTargetName="ScrollViewer" ClosedLength="{Binding TemplateSettings.DropDownClosedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" OpenedTargetName="PopupBorder" OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Closed">
                                        <Storyboard>
                                            <SplitCloseThemeAnimation ClosedTargetName="ContentPresenter" ContentTranslationOffset="40" ContentTranslationDirection="{Binding TemplateSettings.SelectedItemDirection, RelativeSource={RelativeSource Mode=TemplatedParent}}" ContentTargetName="ScrollViewer" ClosedLength="{Binding TemplateSettings.DropDownClosedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" OpenedTargetName="PopupBorder" OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                            <Rectangle x:Name="PressedBackground" Fill="{StaticResource ComboBoxPressedHighlightThemeBrush}" Margin="{TemplateBinding BorderThickness}" Opacity="0"/>
                            <Border x:Name="HighlightBackground" BorderBrush="{StaticResource ComboBoxFocusedBorderThemeBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ComboBoxFocusedBackgroundThemeBrush}" Grid.ColumnSpan="2" Opacity="0"/>
                            <Rectangle x:Name="Highlight" Fill="{StaticResource ComboBoxSelectedBackgroundThemeBrush}" Margin="{TemplateBinding BorderThickness}" Opacity="0"/>
                            <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <TextBlock x:Name="DropDownGlyph" Grid.Column="1" Foreground="{StaticResource ComboBoxArrowForegroundThemeBrush}" FontWeight="Bold" FontSize="{StaticResource ComboBoxArrowThemeFontSize}" FontFamily="{StaticResource SymbolThemeFontFamily}" HorizontalAlignment="Right" IsHitTestVisible="False" Margin="0,0,6,4" Text="&#xE011;" VerticalAlignment="Center"/>
                            <Popup x:Name="Popup">
                                <Border x:Name="PopupBorder" BorderBrush="{StaticResource ComboBoxPopupBorderThemeBrush}" BorderThickness="{StaticResource ComboBoxPopupBorderThemeThickness}" Background="{StaticResource ComboBoxPopupBackgroundThemeBrush}" HorizontalAlignment="Stretch">
                                    <ScrollViewer x:Name="ScrollViewer" BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}" Foreground="{StaticResource ComboBoxPopupForegroundThemeBrush}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" VerticalSnapPointsType="OptionalSingle" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" VerticalSnapPointsAlignment="Near" ZoomMode="Disabled">
                                        <ItemsPresenter/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="GridViewStyle2" TargetType="GridView">
            <Setter Property="Padding" Value="0,0,0,10"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="TabNavigation" Value="Once"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Enabled"/>
            <Setter Property="ScrollViewer.IsHorizontalRailEnabled" Value="False"/>
            <Setter Property="ScrollViewer.VerticalScrollMode" Value="Disabled"/>
            <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="False"/>
            <Setter Property="ScrollViewer.ZoomMode" Value="Disabled"/>
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
            <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True"/>
            <Setter Property="IsSwipeEnabled" Value="True"/>
            <Setter Property="ItemContainerTransitions">
                <Setter.Value>
                    <TransitionCollection>
                        <AddDeleteThemeTransition/>
                        <ContentThemeTransition/>
                        <ReorderThemeTransition/>
                        <EntranceThemeTransition IsStaggeringEnabled="False"/>
                    </TransitionCollection>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <WrapGrid Orientation="Vertical"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GridView">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                            <ScrollViewer x:Name="ScrollViewer" BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}" IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" TabNavigation="{TemplateBinding TabNavigation}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}">
                     
                                    <ItemsPresenter HeaderTemplate="{TemplateBinding HeaderTemplate}" Header="{TemplateBinding Header}" HeaderTransitions="{TemplateBinding HeaderTransitions}" Padding="{TemplateBinding Padding}"/>
                 
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Charts:XamDataChart">
            <Setter Property="Margin" Value="0"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="#7F000000"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Charts:XamDataChart">
                        <Grid x:Name="RootLayout" Margin="{TemplateBinding Margin}">
                            <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Transparent" CornerRadius="0" Background="{TemplateBinding Background}">
                                <ContentPresenter x:Name="ContentPresenter" Margin="0">
                                </ContentPresenter>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ProgressBarStyle1" TargetType="ProgressBar">
        	<Setter Property="Foreground" Value="{StaticResource ProgressBarForegroundThemeBrush}"/>
        	<Setter Property="Background" Value="{StaticResource ProgressBarBackgroundThemeBrush}"/>
        	<Setter Property="BorderBrush" Value="{StaticResource ProgressBarBorderThemeBrush}"/>
        	<Setter Property="BorderThickness" Value="{StaticResource ProgressBarBorderThemeThickness}"/>
        	<Setter Property="Maximum" Value="100"/>
        	<Setter Property="MinHeight" Value="{StaticResource ProgressBarThemeMinHeight}"/>
        	<Setter Property="IsTabStop" Value="False"/>
        	<Setter Property="VerticalAlignment" Value="Center"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="ProgressBar">
        				<Grid>
        					<VisualStateManager.VisualStateGroups>
        						<VisualStateGroup x:Name="CommonStates">
        							<VisualStateGroup.Transitions>
        								<VisualTransition From="Updating" To="Determinate">
        									<Storyboard>
        										<RepositionThemeAnimation FromHorizontalOffset="{Binding TemplateSettings.IndicatorLengthDelta, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="ProgressBarIndicator"/>
        									</Storyboard>
        								</VisualTransition>
        								<VisualTransition From="Paused" To="Determinate">
        									<Storyboard>
        										<DoubleAnimation Duration="0:0:0.25" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ProgressBarIndicator"/>
        									</Storyboard>
        								</VisualTransition>
        								<VisualTransition From="Indeterminate">
        									<Storyboard>
        										<FadeInThemeAnimation TargetName="EllipseGrid"/>
        									</Storyboard>
        								</VisualTransition>
        							</VisualStateGroup.Transitions>
        							<VisualState x:Name="Determinate"/>
        							<VisualState x:Name="Updating"/>
        							<VisualState x:Name="Indeterminate">
        								<Storyboard RepeatBehavior="Forever">
        									<DoubleAnimation Duration="0:0:3.917" From="{Binding TemplateSettings.ContainerAnimationStartPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}" To="{Binding TemplateSettings.ContainerAnimationEndPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="EllipseGrid"/>
        									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E1">
        										<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
        										<SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:1" Value="{Binding TemplateSettings.EllipseAnimationWellPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
        										<EasingDoubleKeyFrame KeyTime="0:0:2" Value="{Binding TemplateSettings.EllipseAnimationWellPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
        										<SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:3" Value="{Binding TemplateSettings.EllipseAnimationEndPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
        									</DoubleAnimationUsingKeyFrames>
        									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E2">
        										<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
        										<EasingDoubleKeyFrame KeyTime="0:0:0.167" Value="0"/>
        										<SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:1.167" Value="{Binding TemplateSettings.EllipseAnimationWellPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
        										<EasingDoubleKeyFrame KeyTime="0:0:2.167" Value="{Binding TemplateSettings.EllipseAnimationWellPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
        										<SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:3.167" Value="{Binding TemplateSettings.EllipseAnimationEndPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
        									</DoubleAnimationUsingKeyFrames>
        									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E3">
        										<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
        										<EasingDoubleKeyFrame KeyTime="0:0:0.333" Value="0"/>
        										<SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:1.333" Value="{Binding TemplateSettings.EllipseAnimationWellPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
        										<EasingDoubleKeyFrame KeyTime="0:0:2.333" Value="{Binding TemplateSettings.EllipseAnimationWellPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
        										<SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:3.333" Value="{Binding TemplateSettings.EllipseAnimationEndPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
        									</DoubleAnimationUsingKeyFrames>
        									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E4">
        										<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
        										<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
        										<SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:1.5" Value="{Binding TemplateSettings.EllipseAnimationWellPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
        										<EasingDoubleKeyFrame KeyTime="0:0:2.5" Value="{Binding TemplateSettings.EllipseAnimationWellPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
        										<SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:3.5" Value="{Binding TemplateSettings.EllipseAnimationEndPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
        									</DoubleAnimationUsingKeyFrames>
        									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E5">
        										<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
        										<EasingDoubleKeyFrame KeyTime="0:0:0.667" Value="0"/>
        										<SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:1.667" Value="{Binding TemplateSettings.EllipseAnimationWellPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
        										<EasingDoubleKeyFrame KeyTime="0:0:2.667" Value="{Binding TemplateSettings.EllipseAnimationWellPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
        										<SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:3.667" Value="{Binding TemplateSettings.EllipseAnimationEndPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
        									</DoubleAnimationUsingKeyFrames>
        									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="B1">
        										<EasingDoubleKeyFrame KeyTime="0" Value="-50"/>
        										<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
        										<EasingDoubleKeyFrame KeyTime="0:0:2" Value="0"/>
        										<EasingDoubleKeyFrame KeyTime="0:0:3" Value="100"/>
        									</DoubleAnimationUsingKeyFrames>
        									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="B2">
        										<EasingDoubleKeyFrame KeyTime="0" Value="-50"/>
        										<EasingDoubleKeyFrame KeyTime="0:0:0.667" Value="0"/>
        										<EasingDoubleKeyFrame KeyTime="0:0:2.167" Value="0"/>
        										<EasingDoubleKeyFrame KeyTime="0:0:3.167" Value="100"/>
        									</DoubleAnimationUsingKeyFrames>
        									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="B3">
        										<EasingDoubleKeyFrame KeyTime="0" Value="-50"/>
        										<EasingDoubleKeyFrame KeyTime="0:0:0.833" Value="0"/>
        										<EasingDoubleKeyFrame KeyTime="0:0:2.333" Value="0"/>
        										<EasingDoubleKeyFrame KeyTime="0:0:3.333" Value="100"/>
        									</DoubleAnimationUsingKeyFrames>
        									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="B4">
        										<EasingDoubleKeyFrame KeyTime="0" Value="-50"/>
        										<EasingDoubleKeyFrame KeyTime="0:0:1" Value="0"/>
        										<EasingDoubleKeyFrame KeyTime="0:0:2.5" Value="0"/>
        										<EasingDoubleKeyFrame KeyTime="0:0:3.5" Value="100"/>
        									</DoubleAnimationUsingKeyFrames>
        									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="B5">
        										<EasingDoubleKeyFrame KeyTime="0" Value="-50"/>
        										<EasingDoubleKeyFrame KeyTime="0:0:1.167" Value="0"/>
        										<EasingDoubleKeyFrame KeyTime="0:0:2.667" Value="0"/>
        										<EasingDoubleKeyFrame KeyTime="0:0:3.667" Value="100"/>
        									</DoubleAnimationUsingKeyFrames>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="EllipseGrid"/>
        									<FadeOutThemeAnimation TargetName="DeterminateRoot"/>
        									<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DeterminateRoot"/>
        									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="E1">
        										<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
        										<EasingDoubleKeyFrame KeyTime="0:0:3" Value="1"/>
        										<EasingDoubleKeyFrame KeyTime="0:0:3" Value="0"/>
        									</DoubleAnimationUsingKeyFrames>
        									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="E2">
        										<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
        										<EasingDoubleKeyFrame KeyTime="0:0:0.167" Value="0"/>
        										<EasingDoubleKeyFrame KeyTime="0:0:0.167" Value="1"/>
        										<EasingDoubleKeyFrame KeyTime="0:0:3.167" Value="1"/>
        										<EasingDoubleKeyFrame KeyTime="0:0:3.167" Value="0"/>
        									</DoubleAnimationUsingKeyFrames>
        									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="E3">
        										<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
        										<EasingDoubleKeyFrame KeyTime="0:0:0.333" Value="0"/>
        										<EasingDoubleKeyFrame KeyTime="0:0:0.333" Value="1"/>
        										<EasingDoubleKeyFrame KeyTime="0:0:3.333" Value="1"/>
        										<EasingDoubleKeyFrame KeyTime="0:0:3.333" Value="0"/>
        									</DoubleAnimationUsingKeyFrames>
        									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="E4">
        										<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
        										<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
        										<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
        										<EasingDoubleKeyFrame KeyTime="0:0:3.5" Value="1"/>
        										<EasingDoubleKeyFrame KeyTime="0:0:3.5" Value="0"/>
        									</DoubleAnimationUsingKeyFrames>
        									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="E5">
        										<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
        										<EasingDoubleKeyFrame KeyTime="0:0:0.667" Value="0"/>
        										<EasingDoubleKeyFrame KeyTime="0:0:0.667" Value="1"/>
        										<EasingDoubleKeyFrame KeyTime="0:0:3.667" Value="1"/>
        										<EasingDoubleKeyFrame KeyTime="0:0:3.667" Value="0"/>
        									</DoubleAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Error">
        								<Storyboard>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ProgressBarIndicator">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
        									</ObjectAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Paused">
        								<Storyboard>
        									<DoubleAnimation Duration="0:0:0.25" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ProgressBarIndicator"/>
        								</Storyboard>
        							</VisualState>
        						</VisualStateGroup>
        					</VisualStateManager.VisualStateGroups>
        					<Grid x:Name="EllipseGrid" Opacity="0">
        						<Grid.ColumnDefinitions>
        							<ColumnDefinition Width="Auto"/>
        							<ColumnDefinition Width="Auto"/>
        							<ColumnDefinition Width="Auto"/>
        							<ColumnDefinition Width="Auto"/>
        							<ColumnDefinition Width="Auto"/>
        							<ColumnDefinition Width="Auto"/>
        							<ColumnDefinition Width="Auto"/>
        							<ColumnDefinition Width="Auto"/>
        							<ColumnDefinition Width="Auto"/>
        						</Grid.ColumnDefinitions>
        						<Grid.RenderTransform>
        							<TranslateTransform/>
        						</Grid.RenderTransform>
        						<Border x:Name="B1" Grid.Column="8" RenderTransformOrigin="0.5,0.5">
        							<Border.RenderTransform>
        								<TranslateTransform/>
        							</Border.RenderTransform>
        							<Ellipse x:Name="E1" Fill="#FF1BA1E2" Height="{Binding TemplateSettings.EllipseDiameter, RelativeSource={RelativeSource Mode=TemplatedParent}}" RenderTransformOrigin="0.5,0.5" Width="{Binding TemplateSettings.EllipseDiameter, RelativeSource={RelativeSource Mode=TemplatedParent}}">
        								<Ellipse.RenderTransform>
        									<TranslateTransform/>
        								</Ellipse.RenderTransform>
        							</Ellipse>
        						</Border>
        						<Rectangle Grid.Column="7" Width="{Binding TemplateSettings.EllipseOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
        						<Border x:Name="B2" Grid.Column="6" RenderTransformOrigin="0.5,0.5">
        							<Border.RenderTransform>
        								<TranslateTransform/>
        							</Border.RenderTransform>
        							<Ellipse x:Name="E2" Fill="#FF1BA1E2" Height="{Binding TemplateSettings.EllipseDiameter, RelativeSource={RelativeSource Mode=TemplatedParent}}" RenderTransformOrigin="0.5,0.5" Width="{Binding TemplateSettings.EllipseDiameter, RelativeSource={RelativeSource Mode=TemplatedParent}}">
        								<Ellipse.RenderTransform>
        									<TranslateTransform/>
        								</Ellipse.RenderTransform>
        							</Ellipse>
        						</Border>
        						<Rectangle Grid.Column="5" Width="{Binding TemplateSettings.EllipseOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
        						<Border x:Name="B3" Grid.Column="4" RenderTransformOrigin="0.5,0.5">
        							<Border.RenderTransform>
        								<TranslateTransform/>
        							</Border.RenderTransform>
        							<Ellipse x:Name="E3" Fill="#FF1BA1E2" Height="{Binding TemplateSettings.EllipseDiameter, RelativeSource={RelativeSource Mode=TemplatedParent}}" RenderTransformOrigin="0.5,0.5" Width="{Binding TemplateSettings.EllipseDiameter, RelativeSource={RelativeSource Mode=TemplatedParent}}">
        								<Ellipse.RenderTransform>
        									<TranslateTransform/>
        								</Ellipse.RenderTransform>
        							</Ellipse>
        						</Border>
        						<Rectangle Grid.Column="3" Width="{Binding TemplateSettings.EllipseOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
        						<Border x:Name="B4" Grid.Column="2" RenderTransformOrigin="0.5,0.5">
        							<Border.RenderTransform>
        								<TranslateTransform/>
        							</Border.RenderTransform>
        							<Ellipse x:Name="E4" Fill="#FF1BA1E2" Height="{Binding TemplateSettings.EllipseDiameter, RelativeSource={RelativeSource Mode=TemplatedParent}}" RenderTransformOrigin="0.5,0.5" Width="{Binding TemplateSettings.EllipseDiameter, RelativeSource={RelativeSource Mode=TemplatedParent}}">
        								<Ellipse.RenderTransform>
        									<TranslateTransform/>
        								</Ellipse.RenderTransform>
        							</Ellipse>
        						</Border>
        						<Rectangle Grid.Column="1" Width="{Binding TemplateSettings.EllipseOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
        						<Border x:Name="B5" Grid.Column="0" RenderTransformOrigin="0.5,0.5">
        							<Border.RenderTransform>
        								<TranslateTransform/>
        							</Border.RenderTransform>
        							<Ellipse x:Name="E5" Fill="#FF1BA1E2" Height="{Binding TemplateSettings.EllipseDiameter, RelativeSource={RelativeSource Mode=TemplatedParent}}" RenderTransformOrigin="0.5,0.5" Width="{Binding TemplateSettings.EllipseDiameter, RelativeSource={RelativeSource Mode=TemplatedParent}}">
        								<Ellipse.RenderTransform>
        									<TranslateTransform/>
        								</Ellipse.RenderTransform>
        							</Ellipse>
        						</Border>
        					</Grid>
        					<Border x:Name="DeterminateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
        						<Rectangle x:Name="ProgressBarIndicator" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}"/>
        					</Border>
        				</Grid>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
    </Page.Resources>

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid Style="{StaticResource LayoutRootStyle}">
    	<Grid.Background>
    		<ImageBrush ImageSource="Assets/road.png" Stretch="UniformToFill"/>
    	</Grid.Background>
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <SemanticZoom x:Name="semanticZoom" Grid.RowSpan="2" Background="{x:Null}">
        	<SemanticZoom.ZoomedOutView>
                <GridView Padding="116,140,40,46" Foreground="White">
                    <GridView.ItemTemplate>
                        <DataTemplate>
                            <Grid d:DesignWidth="204.5" d:DesignHeight="480" >
                        		<StackPanel VerticalAlignment="Top">
                        			<StackPanel Margin="0" Orientation="Vertical" VerticalAlignment="Top" Height="127">
                        				<TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Text="{Binding Group.TotalActivities.Count}" VerticalAlignment="Top" FontFamily="Segoe UI" FontSize="56" FontWeight="Light" LineStackingStrategy="BlockLineHeight"/>
                        				<TextBlock TextWrapping="Wrap" Text="runs" FontFamily="Segoe UI" FontSize="26.667" FontWeight="Light" Margin="19,0" HorizontalAlignment="Center" VerticalAlignment="Top"/>
                        			</StackPanel>
                        			<StackPanel Margin="0,10,0,0" Orientation="Vertical" VerticalAlignment="Top" Height="127">
                        				<TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Text="{Binding Group.DistanceRun}" VerticalAlignment="Top" FontFamily="Segoe UI" FontSize="56" FontWeight="Light" LineStackingStrategy="BlockLineHeight"/>
                        				<TextBlock TextWrapping="Wrap" Text="miles" FontFamily="Segoe UI" FontSize="26.667" FontWeight="Light" Margin="19,0" HorizontalAlignment="Center" VerticalAlignment="Top"/>
                        			</StackPanel>
                        			<StackPanel Margin="0,10,0,0" Orientation="Vertical" VerticalAlignment="Top" Height="127">
                        				<TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Text="{Binding Group.MinutesRun}" VerticalAlignment="Top" FontFamily="Segoe UI" FontSize="56" FontWeight="Light" LineStackingStrategy="BlockLineHeight"/>
                        				<TextBlock TextWrapping="Wrap" Text="minutes" FontFamily="Segoe UI" FontSize="26.667" FontWeight="Light" Margin="19,0" HorizontalAlignment="Center" VerticalAlignment="Top"/>
                        			</StackPanel>
                        			<TextBlock
                        				Style="{StaticResource SubheaderTextStyle}"
                        				Foreground="#FF2B8FDB" Text="{Binding Group.Month}" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0,10,0,0" />
                        		</StackPanel>
                        	</Grid>
                        </DataTemplate>
                    </GridView.ItemTemplate>
                    <GridView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapGrid ItemWidth="205" ItemHeight="480"  MaximumRowsOrColumns="1" 
                                    VerticalChildrenAlignment="Stretch" />
                        </ItemsPanelTemplate>
                    </GridView.ItemsPanel>
                    <GridView.ItemContainerStyle>
                        <Style TargetType="GridViewItem">
                            <Setter Property="Background" Value="#7F000000" />
                        </Style>
                    </GridView.ItemContainerStyle>
                </GridView>
            </SemanticZoom.ZoomedOutView>
            <SemanticZoom.ZoomedInView>
                <!-- Horizontal scrolling grid used in most view states -->
                <GridView
            x:Name="itemGridView"
            Padding="116,137,40,46"
            AutomationProperties.AutomationId="ItemGridView"
            AutomationProperties.Name="Grouped Items"
            ItemsSource="{Binding Source={StaticResource groupedItemsViewSource}}"
            ItemTemplate="{StaticResource RootActivity260x110ItemTemplate}"
            SelectionMode="None"
            IsSwipeEnabled="false"
            ScrollViewer.IsHorizontalScrollChainingEnabled="False"
            IsItemClickEnabled="True"
            ItemClick="ItemView_ItemClick" Style="{StaticResource GridViewStyle2}" Margin="-4,-3,0,-4" Foreground="White" FontFamily="Global User Interface" >
                    <GridView.Header>
					<Grid Margin="-116,-140,120,-45" Height="Auto" Background="White" MinWidth="1035" MinHeight="771" HorizontalAlignment="Left" MaxWidth="1039">
						<Grid.Resources>
						</Grid.Resources>
                        <Image x:Name="HeaderImage" Margin="0,0,0,-2" Opacity="1" Source="Assets/shoe.png" RenderTransformOrigin="0.5,0.5" Stretch="UniformToFill"/>
                        <Grid Margin="120,508,0,101" VerticalAlignment="Bottom">
                        	<StackPanel Orientation="Horizontal" VerticalAlignment="Top" Margin="0,42,0,0" Opacity="0.985">
                        	<!--<Border Width="310" Height="150" Margin="20,0,0,0">
									<Border.Background>
										<LinearGradientBrush EndPoint="1.277,0.556" StartPoint="-0.019,0.555">
											<GradientStop Color="#FF0A75C1"/>
											<GradientStop Color="#FF0074B6" Offset="1"/>
										</LinearGradientBrush>
									</Border.Background>
								</Border>-->
                        		<Grid Width="656" Height="120" HorizontalAlignment="Left"
                        			VerticalAlignment="Top">
                        			<Charts:XamDataChart x:Name="DistanceChart" Padding="0" 
                                   
                        				Background="#7F000000" FontFamily="Segoe UI" CrosshairVisibility="Collapsed" GridMode="None" PlotAreaBackground="Transparent" PlotAreaBorderThickness="0" WindowResponse="Immediate" >
                        				<Charts:XamDataChart.Series>
                        					<Charts:ColumnSeries BorderThickness="0" Brush="#FFFF2F71" EndCap="Square" FontSize="14.667" FontFamily="Segoe UI" ItemsSource="{Binding DistanceByMonth}" LineJoin="Miter" RadiusY="0" RadiusX="0" RenderTransformOrigin="0,0" Thickness="0" Title="Distance Summary" ValueMemberPath="TotalDistance" XAxis="{Binding ElementName=MonthXAxis}" YAxis="{Binding ElementName=DistanceYAxis}"/>
                        				</Charts:XamDataChart.Series>
                        				<Charts:XamDataChart.Axes>
                        					<Charts:NumericYAxis x:Name="DistanceYAxis" Interval="5" MajorStroke="#88CCCCCC" MajorStrokeThickness="0.25" MinimumValue="0">
                        						<Charts:NumericYAxis.LabelSettings>
                        							<Charts:AxisLabelSettings Visibility="Collapsed"/>
                        						</Charts:NumericYAxis.LabelSettings>
                        					</Charts:NumericYAxis>
                        					<Charts:CategoryXAxis x:Name="MonthXAxis" Foreground="White" ItemsSource="{Binding DistanceByMonth}" Interval="1" MinorStrokeThickness="0" MajorStrokeThickness="0">
                        						<Charts:CategoryXAxis.Label>
                        							<DataTemplate>
                        								<TextBlock Foreground="White" FontWeight="Semilight" FontSize="14.667" FontFamily="Segoe UI" Text="{Binding Item.Month}"/>
                        							</DataTemplate>
                        						</Charts:CategoryXAxis.Label>
                        						<Charts:CategoryXAxis.LabelSettings>
                        							<Charts:AxisLabelSettings Visibility="Visible"/>
                        						</Charts:CategoryXAxis.LabelSettings>
                        					</Charts:CategoryXAxis>
                        				</Charts:XamDataChart.Axes>
                        			</Charts:XamDataChart>
                        			<Border x:Name="border" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" d:IsHidden="True" >
                        				<ProgressRing x:Name="progressRing" IsActive="True" Padding="0" Height="100" Width="100" Margin="0">
                        					<ProgressRing.Foreground>
                        						<SolidColorBrush Color="{StaticResource IGBrush}"/>
                        					</ProgressRing.Foreground>
                        				</ProgressRing>
                        			</Border></Grid>
                        	</StackPanel>
                                <TextBlock TextWrapping="Wrap" Text="monthly totals" Style="{StaticResource PageSubheaderTextStyle}" Foreground="White" Margin="0,-11,0,0" Width="165" HorizontalAlignment="Left" VerticalAlignment="Top" LineStackingStrategy="BaselineToBaseline" LineHeight="26.667" RenderTransformOrigin="0.5,0.5">
                                    <TextBlock.RenderTransform>
                                        <CompositeTransform TranslateX="-1" TranslateY="6"/>
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                            </Grid>
                        <Rectangle HorizontalAlignment="Left" VerticalAlignment="Top" Opacity="1" Fill="#7F000000" Margin="782,184,0,0" Width="220" Height="333"/>
                        <StackPanel HorizontalAlignment="Left" VerticalAlignment="Top" Width="220" Margin="782,140,0,0">
                        	<TextBlock TextWrapping="Wrap" Text="This Year's Totals" FontFamily="Segoe UI" FontSize="26.667" LineHeight="30" LineStackingStrategy="BlockLineHeight" TextTrimming="WordEllipsis" FontWeight="Light" RenderTransformOrigin="0.5,0.5"/>
                        	<Grid Height="106" Margin="0,13,0,0">
                        		<TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Text="miles" VerticalAlignment="Bottom" FontFamily="Segoe UI" FontSize="26.667" FontWeight="Light" LineStackingStrategy="BlockLineHeight" TextTrimming="WordEllipsis" LineHeight="30" Margin="0,0,0,12"/>
                        		<TextBlock TextWrapping="Wrap" Text="{Binding YearlyMiles}" VerticalAlignment="Top" FontFamily="Segoe UI" FontSize="56" FontWeight="Light" LineStackingStrategy="BlockLineHeight" TextTrimming="WordEllipsis" TextAlignment="Center"/>
                        		<Image Margin="0,8,12,0" Source="Assets/miles_icon.png" Stretch="None" HorizontalAlignment="Right" VerticalAlignment="Top"/>
                        	</Grid>
                        	<Grid Height="106" Margin="0,8,0,0">
                        		<TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Text="minutes" VerticalAlignment="Bottom" FontFamily="Segoe UI" FontSize="26.667" FontWeight="Light" LineStackingStrategy="BlockLineHeight" TextTrimming="WordEllipsis" LineHeight="30" Margin="59.293,0,58.706,12"/>
                        		<TextBlock TextWrapping="Wrap" Text="{Binding YearlyMinutes}" VerticalAlignment="Top" FontFamily="Segoe UI" FontSize="56" FontWeight="Light" LineStackingStrategy="BlockLineHeight" TextTrimming="WordEllipsis" TextAlignment="Center"/>
                        		<Image Margin="0,6,12,0" Source="Assets/time_icon.png" Stretch="None" HorizontalAlignment="Right" VerticalAlignment="Top"/>
                        	</Grid>
                        	<Grid Height="106" Margin="0,8,0,0">
                        		<TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Text="calories burned" VerticalAlignment="Bottom" FontFamily="Segoe UI" FontSize="26.667" FontWeight="Light" LineStackingStrategy="BlockLineHeight" TextTrimming="WordEllipsis" LineHeight="30" Margin="25,0,14,12" Width="181"/>
                        		<TextBlock TextWrapping="Wrap" Text="{Binding YearlyCalories}" VerticalAlignment="Top" FontFamily="Segoe UI" FontSize="56" FontWeight="Light" LineStackingStrategy="BlockLineHeight" TextTrimming="WordEllipsis" TextAlignment="Center"/>
                        		<Image Margin="0,13,12,0" Source="Assets/calories_icon.png" Stretch="None" HorizontalAlignment="Right" VerticalAlignment="Top"/>
                        	</Grid>
                        </StackPanel>
                        <ProgressBar x:Name="progressBar" HorizontalAlignment="Left" Height="7" VerticalAlignment="Top" Width="220" Margin="782,184,0,0" Background="{x:Null}" IsIndeterminate="True" IsEnabled="False" Style="{StaticResource ProgressBarStyle1}">
                        	<ProgressBar.Foreground>
                        		<SolidColorBrush Color="#FF1BA1E2"/>
                        	</ProgressBar.Foreground>
                        </ProgressBar>
						</Grid>
                    </GridView.Header>
                        <GridView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel Orientation="Horizontal" MinWidth="1244"/>
                        </ItemsPanelTemplate>
                    </GridView.ItemsPanel>
                    <GridView.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.HeaderTemplate>
                                <DataTemplate>
                                    <Grid Margin="1,0,0,6">
                                        <Button
                                    AutomationProperties.Name="Group Title"
                                    Click="Header_Click"
                                    Style="{StaticResource TextPrimaryButtonStyle}" >
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding MonthPlusTotal}" Margin="3,-7,10,10" Style="{StaticResource GroupHeaderTextStyle}" />
                                                <TextBlock Text="{StaticResource ChevronGlyph}" FontFamily="Segoe UI Symbol" Margin="0,-7,0,10" Style="{StaticResource GroupHeaderTextStyle}"/>
                                            </StackPanel>
                                        </Button>
                                    </Grid>
                                </DataTemplate>
                            </GroupStyle.HeaderTemplate>
                            <GroupStyle.Panel>
                                <ItemsPanelTemplate>
                                    <VariableSizedWrapGrid Orientation="Vertical" Margin="0,0,80,0"/>
                                </ItemsPanelTemplate>
                            </GroupStyle.Panel>
                        </GroupStyle>
                    </GridView.GroupStyle>
                </GridView>
            </SemanticZoom.ZoomedInView>
        </SemanticZoom>


        <!-- Vertical scrolling list only used when snapped -->
        <ListView
            x:Name="itemListView"
            AutomationProperties.AutomationId="ItemListView"
            AutomationProperties.Name="Grouped Items"
            Grid.Row="1"
            Visibility="Collapsed"
            Margin="0,-10,0,0"
            Padding="10,0,0,60"
            ItemsSource="{Binding Source={StaticResource groupedItemsViewSource}}"
            ItemTemplate="{StaticResource Standard80ItemTemplate}"
            SelectionMode="None"
            IsSwipeEnabled="false"
            IsItemClickEnabled="True"
            ItemClick="ItemView_ItemClick">

            <ListView.GroupStyle>
                <GroupStyle>
                    <GroupStyle.HeaderTemplate>
                        <DataTemplate>
                            <Grid Margin="7,7,0,0">
                                <Button
                                    AutomationProperties.Name="Group Title"
                                    Click="Header_Click"
                                    Style="{StaticResource TextPrimaryButtonStyle}">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding MonthPlusTotal}" Margin="3,-7,10,10" Style="{StaticResource GroupHeaderTextStyle}" />
                                        <TextBlock Text="{StaticResource ChevronGlyph}" FontFamily="Segoe UI Symbol" Margin="0,-7,0,10" Style="{StaticResource GroupHeaderTextStyle}"/>
                                    </StackPanel>
                                </Button>
                            </Grid>
                        </DataTemplate>
                    </GroupStyle.HeaderTemplate>
                </GroupStyle>
            </ListView.GroupStyle>
        </ListView>

        <!-- Back button and page title -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="backButton" Click="GoBack" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource BackButtonStyle}"/>
            	<TextBlock x:Name="pageTitle" Grid.Column="1" Text="{StaticResource AppName}" IsHitTestVisible="false" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Center" Style="{StaticResource PageHeaderTextStyle}" Margin="0,20,0,0">
            	</TextBlock>
        </Grid>

        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>

                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemGridView" Storyboard.TargetProperty="Padding">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="96,137,10,56"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!--
                    The back button and title have different styles when snapped, and the list representation is substituted
                    for the grid displayed in all other view states
                -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>

                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemListView" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemGridView" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="HeaderBackgroundStates">
            	<VisualStateGroup.Transitions>
            		<VisualTransition GeneratedDuration="0"/>
            	</VisualStateGroup.Transitions>
            	<VisualState x:Name="HeaderBackgroundInactive">
            		<Storyboard>
            			<DoubleAnimation Duration="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HeaderImage" d:IsOptimized="True" To="0"/>
            		</Storyboard>
            	</VisualState>
            	<VisualState x:Name="HeaderBackgroundActive">
            		<Storyboard>
            			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HeaderImage">
            				<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
            				<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
            				<EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="1"/>
            			</DoubleAnimationUsingKeyFrames>
            		</Storyboard>
            	</VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="ChartSpinnerStates">
            	<VisualStateGroup.Transitions>
            		<VisualTransition GeneratedDuration="0:0:0.75"/>
            	</VisualStateGroup.Transitions>
            	<VisualState x:Name="SpinnersActive"/>
            	<VisualState x:Name="SpinnersInactive">
            		<Storyboard>
            			<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(ProgressRing.IsActive)" Storyboard.TargetName="progressRing">
            				<DiscreteObjectKeyFrame KeyTime="0">
            					<DiscreteObjectKeyFrame.Value>
            						<x:Boolean>False</x:Boolean>
            					</DiscreteObjectKeyFrame.Value>
            				</DiscreteObjectKeyFrame>
            			</ObjectAnimationUsingKeyFrames>
            			<DoubleAnimation Duration="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border" d:IsOptimized="True" To="0"/>
            			<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="progressBar" d:IsOptimized="True"/>
            			<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.IsEnabled)" Storyboard.TargetName="progressBar">
            				<DiscreteObjectKeyFrame KeyTime="0">
            					<DiscreteObjectKeyFrame.Value>
            						<x:Boolean>False</x:Boolean>
            					</DiscreteObjectKeyFrame.Value>
            				</DiscreteObjectKeyFrame>
            			</ObjectAnimationUsingKeyFrames>
            		</Storyboard>
            	</VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>
